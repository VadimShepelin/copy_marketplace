version: '3'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: marketplace
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    restart: always

  api:
    image: app
    build:
      context: src
    container_name: api
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - docker.env

  rate:
    image: rate
    build:
      context: ./rate-service
    container_name: rate
    ports:
      - "8080:8080"
    restart: always

  mail:
    image: mail
    build:
      context: ./mail-service
    container_name: mail
    ports:
      - "8082:8082"
    restart: always

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: byfUyNj2ScSbp3dEy-cqDw
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9091
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9090,EXTERNAL://${HOSTNAME:-localhost}:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT, EXTERNAL:PLAINTEXT, PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  kafka_data: